generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model admin {
  id String @id

  @@map("admin")
}

model User {
  id       String @id @default(uuid())
  name     String
  surname  String
  email    String @unique
  password String
  nickname String @unique

  PrivateMessages PrivateMessages[]
  messages        Messages[]
  posts           Posts[]
  comments        Comments[]
  likes           Likes[]

  cpf String? @unique
  rg  String? @unique

  @@map("users") // Use a forma no plural para refletir a tabela real no banco de dados
}

model ChatRoom {
  id   String @id @default(uuid())
  name String @unique

  messages Messages[]

  @@map("chat_rooms") // Use underscore_case para refletir a tabela real no banco de dados
}

model Messages {
  id      String @id @default(uuid())
  author  String
  content String
  room    String
  hour    String

  roomSended ChatRoom @relation(fields: [room], references: [name])
  creator    User     @relation(fields: [author], references: [nickname])

  @@map("messages")
}

model PrivateMessages {
  id      String @id @default(uuid())
  author  String
  content String
  to      String

  creator User @relation(fields: [author], references: [nickname])

  @@map("PrivateMessages")
}

model Posts {
  id           String   @id @default(uuid())
  title        String
  content      String
  author       String
  type         String?  @default("post")
  shippingTime DateTime

  likes    Likes[]
  comments Comments[]
  creator  User       @relation(fields: [author], references: [nickname])

  @@map("posts")
}

model Comments {
  id            String @id @default(uuid())
  content       String

  authorNick    String
  author        User   @relation(fields: [authorNick], references: [nickname])

  postId        String
  post          Posts  @relation(fields: [postId], references: [id])

  createdAt     DateTime @default(now())

  @@map("comments")
}

model Likes {
  id            String @id @default(uuid())

  post          Posts  @relation(fields: [postId], references: [id])
  postId        String

  userNick      String
  user          User   @relation(fields: [userNick], references: [nickname])

  createdAt     DateTime @default(now())

  @@map("likes")
}
